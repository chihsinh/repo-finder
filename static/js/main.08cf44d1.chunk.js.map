{"version":3,"sources":["components/header.js","components/searchBar.js","components/expandedComponent.js","components/resultTable.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SearchBar","handleClear","handleSearch","setName","multiselectRef","onSelect","onRemove","for","type","id","onChange","e","target","value","ref","options","label","displayValue","placeholder","hidePlaceholder","closeOnSelect","style","chips","background","color","height","border","padding","option","searchBox","width","avoidHighlightFirstOption","customCloseIcon","title","onClick","ExpandedComponent","data","name","owner","description","ResultTable","result","searchState","length","columns","selector","sortable","pagination","expandableRows","expandableRowsComponent","require","config","token","process","AUTH_TOKEN","App","useState","languages","setLanguages","setResult","setSearchState","React","useRef","a","alert","octokit","Octokit","auth","q_lang","forEach","lang","i","push","q","sort","per_page","result_pre","page","rest","search","repos","res","count","total_count","items","item","toLowerCase","includes","newElement","language","stars","watchers_count","toString","login","link","html_url","getCnt","Math","ceil","console","log","document","getElementById","current","resetSelectedValues","selectedList","selectedItem","removedItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.08cf44d1.chunk.js","sourcesContent":["export default function Header () {\n  return (\n    <div className='header'>\n      Repo Finder\n    </div>\n  )\n}\n","import Multiselect from 'multiselect-react-dropdown';\n\nexport default function SearchBar ({ handleClear, handleSearch, setName, multiselectRef, onSelect, onRemove }) {\n  const langList = [\n    {\n      label: 'JavaScript',\n      value: 'javascript'\n    },\n    {\n      label: 'Python',\n      value: 'python'\n    },\n    {\n      label: 'Java',\n      value: 'java'\n    },\n    {\n      label: 'Go',\n      value: 'go'\n    },\n    {\n      label: 'Ruby',\n      value: 'ruby'\n    },\n    {\n      label: 'TypeScript',\n      value: 'typeScript'\n    },\n    {\n      label: 'C++',\n      value: 'cpp'\n    },\n    {\n      label: 'PHP',\n      value: 'php'\n    },\n    {\n      label: 'C#',\n      value: 'c#'\n    },\n    {\n      label: 'C',\n      value: 'c'\n    }]\n\n  return (\n    <div className='searchBar'>\n      <div className='row input-row'>\n        <span className='search-input'>\n          <label for='name'>Repository Name</label>\n          <input\n            type='text'\n            id='name'\n            onChange={(e) => {setName(e.target.value)}}/>\n        </span>\n        <span className='filter-input'>\n          <span>Languages</span>\n          <Multiselect\n          id='multi-select'\n          ref={multiselectRef}\n          options={langList}\n          displayValue='label'\n          placeholder=\"All\"\n          hidePlaceholder={true}\n          onSelect={onSelect}\n          onRemove={onRemove}\n          closeOnSelect={false}\n          style={{\n            chips: {\n              background: '#f8ffe5',\n              color: '#3f3f3f',\n              height: '30px',\n              border: 'none',\n              'border-radius': '50px',\n              padding: '.5% 1% .5% 1%'\n            },\n            option: {\n              color: '#3f3f3f',\n            },\n            searchBox: {\n              width: '40vw',\n              'min-height': '35px',\n              'border-color': '#c8c8c8',\n              'border-radius': '4px'\n            }\n          }}\n          avoidHighlightFirstOption={true}\n          customCloseIcon={<span className='del-button'>&nbsp; &times;</span>}/>\n        </span>\n      </div>\n      <div className='row button-row'>\n        <span\n        className='button'\n        id='clear-button'\n        title='Clear all input'\n        onClick={handleClear}>\n          Clear\n        </span>\n        <span\n        className='button'\n        id='search-button'\n        title='Search for corresponding repositories'\n        onClick={handleSearch}>\n          Search\n        </span>\n      </div>\n    </div>\n  )\n}\n","export default function ExpandedComponent ({ data }) {\n  return (\n    <div className='expandedComponent'>\n      <table>\n        <tr>\n          <td className='table-header'>Name</td>\n          <td>{data.name}</td>\n        </tr>\n        <tr>\n          <td className='table-header'>Owner</td>\n          <td>{data.owner}</td>\n        </tr>\n        <tr>\n          <td className='table-header'>Description</td>\n          <td>{data.description}</td>\n        </tr>\n      </table>\n    </div>\n  )\n}\n","import DataTable from 'react-data-table-component'\nimport ExpandedComponent from './expandedComponent'\n\nexport default function ResultTable ({ result, searchState }) {\n  const columns = [\n    {\n      name: 'Name',\n      selector: 'name',\n      sortable: true\n    },\n    {\n      name: 'Language',\n      selector: 'language',\n      sortable: true\n    },\n    {\n      name: 'Number of Stars',\n      selector: 'stars',\n      sortable: true\n    }\n  ]\n  return (\n    <div className='resultTable'>\n    {\n      result.length === 0?\n      <div>No results found</div> :\n      <DataTable\n        columns={columns}\n        data={result}\n        pagination={true}\n        expandableRows\n        expandableRowsComponent={ExpandedComponent}\n      />\n    }\n    </div>\n  )\n}\n","import Header from './components/header'\nimport SearchBar from './components/searchBar'\nimport ResultTable from './components/resultTable'\n\nimport React, { useState, useEffect } from 'react'\nimport { Octokit } from \"@octokit/rest\"\nimport './App.css'\n\nrequire('dotenv').config()\nconst token = process.env.AUTH_TOKEN\n\nfunction App() {\n  const [name, setName] = useState('')\n  const [languages, setLanguages] = useState([]) //[] means all\n  const [result, setResult] = useState([])\n  const [endSearch, setEndSearch] = useState(false)\n  const [searchState, setSearchState] = useState('none') //none, searching, done\n\n  const multiselectRef = React.useRef()\n\n  const handleClear = () => {\n    let e = document.getElementById('name')\n    e.value = ''\n    multiselectRef.current.resetSelectedValues()\n    setName('')\n    setLanguages([])\n    console.log('clear')\n  }\n\n  const handleSearch = async () => {\n    setSearchState('searching')\n    setResult([])\n    if (name === '') {\n      alert('Repository name has to be filled in order to search.')\n    }\n    const octokit = new Octokit({\n      auth: token\n    });\n    //const octokit = new Octokit()\n\n    const q_lang = []\n    languages.forEach((lang, i) => {\n      q_lang.push('+language:' + lang.value)\n    });\n\n    const q = `q=${name}${q_lang}`\n    const sort = 'stars'\n    const per_page = 100\n    let result_pre = []\n    let page = 1\n    const res = await octokit.rest.search.repos({\n      q,\n      sort,\n      per_page,\n      page\n    })\n\n    const count = res.data.total_count\n    res.data.items.forEach((item, i) => {\n      if (item.name.toLowerCase().includes(name.toLowerCase())) {\n        const newElement = {\n          id: result.length,\n          name: item.name,\n          language: item.language,\n          stars: item.watchers_count.toString(),\n          owner: item.owner.login,\n          description: item.description,\n          link: item.html_url\n        }\n        result_pre.push(newElement)\n      }\n    })\n\n    if (count > 100) {\n      const getCnt = Math.ceil((count - 100) / 100)\n      for (let i = 1; i <= getCnt; i++) {\n        console.log(i)\n        page = i + 1\n        const res = await octokit.rest.search.repos({\n          q,\n          sort,\n          per_page,\n          page\n        })\n\n        res.data.items.forEach((item, i) => {\n          if (item.name.toLowerCase().includes(name.toLowerCase())) {\n            const newElement = {\n              id: result.length,\n              name: item.name,\n              language: item.language,\n              stars: item.watchers_count.toString(),\n              owner: item.owner.login,\n              description: item.description,\n              link: item.html_url\n            }\n            result_pre.push(newElement)\n          }\n        })\n        if (i === getCnt) {\n          setResult(result_pre)\n        }\n      }\n    }\n    else {\n      setResult(result_pre)\n    }\n    setSearchState('done')\n  }\n\n  const onSelect = (selectedList, selectedItem) => {\n    setLanguages(selectedList)\n  }\n\n  const onRemove = (selectedList, removedItem) => {\n    setLanguages(selectedList)\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <SearchBar\n      handleClear={handleClear}\n      handleSearch={handleSearch}\n      setName={setName}\n      multiselectRef={multiselectRef}\n      onSelect={onSelect}\n      onRemove={onRemove}/>\n      {\n        searchState === 'none' ?\n        <div className='resultTable'>Haven't searched yet</div> :\n        searchState === 'searching' ?\n        <div className='resultTable'>Collecting data... please wait</div> :\n        <ResultTable\n        result={result}\n        searchState={searchState}/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}